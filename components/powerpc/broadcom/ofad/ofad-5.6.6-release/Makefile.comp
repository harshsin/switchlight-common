# -*- Makefile -*-
##############################################################################
#
#  Makefile 
#
###############################################################################
include $(SWITCHLIGHT)/make/config.mk

DEBUG := 1
SDK := $(shell $(SWITCHLIGHT_PKG_INSTALL) libbroadcom-5.6-release-dev:powerpc --find-dir libbroadcom-5.6-release-sdk)
SDK_LIB_DIR := $(SDK)/build/switchlight/powerpc/release
SDK_BUILD_TARGET := pandora-powerpc-2_6
export SDK_USE_RELEASE_BUILD := 1
LIBBROADCOM_A := libbroadcom-5.6-release.a
LIBBROADCOM_SO := libbroadcom-release.so.5.6
include $(SWITCHLIGHT_SUBMODULE_BROADCOM)/tools/sdk.mk

GLOBAL_CFLAGS += -DSDK_SIM_CONFIG_INCLUDE_SDK_$(SDK_UVERSION)=1

#
# Default to a local build directory for everything
#
export BUILD_DIR := ./build

ifndef TOOLCHAIN
TOOLCHAIN := powerpc-linux-gnu
endif

MODULE := ofad-5.6.6-release
include $(BUILDER)/standardinit.mk

LIBRARY := ofad-5.6.6-release-lib
$(LIBRARY)_SUBDIR := $(dir $(lastword $(MAKEFILE_LIST)))
include $(BUILDER)/lib.mk

DEPENDMODULES := SocketManager OFConnectionManager BRCM BRCMDriver \
	OFStateManager snmp murmur NSS ELS AET Configuration cjson \
	loci indigo Faultd IOF PPE IVS uCli BigList BigRing OS AIM \
	tagport pimu nwac ofadm BigHash

#
# Resolve module dependencies
#
include $(BUILDER)/dependmodules.mk

BINARY := ofad.shared
$(BINARY)_LIBRARIES := $(LIBRARY_TARGETS) 
include $(BUILDER)/bin.mk
$(BINARY)_EXTRA_LINK_LIBS += $(SDK_SHARED_LINK_LIBS)

BINARY := ofad.static
$(BINARY)_LIBRARIES := $(LIBRARY_TARGETS) 
include $(BUILDER)/bin.mk
$(BINARY)_EXTRA_LINK_LIBS += $(SDK_STATIC_LINK_LIBS)

SCRIPT := brcm_lb9_gpio_init
$(SCRIPT)_PARTS := $(SWITCHLIGHT_SUBMODULE_BROADCOM)/Modules/BRCM/module/src/$(SCRIPT)
include $(BUILDER)/script.mk

#
# Now that we've specified all the things we want to build, 
# finalize with target definitions. 
#
include $(BUILDER)/targets.mk

#
# Include UCLI support for all modules by default. 
#
GLOBAL_CFLAGS += $(foreach mod,$(DEPENDMODULES_UPPER),-D$(mod)_CONFIG_INCLUDE_UCLI=1)


# These indicate Linux specific implementations to be used for
# various features
GLOBAL_CFLAGS += -DINDIGO_LINUX_LOGGING
GLOBAL_CFLAGS += -DINDIGO_LINUX_TIME
GLOBAL_CFLAGS += -DINDIGO_LINUX_TIME_MONOTONIC
GLOBAL_CFLAGS += -DINDIGO_FAULT_ON_ASSERT
GLOBAL_CFLAGS += -DINDIGO_MEM_STDLIB
GLOBAL_CFLAGS += -DPORTMANAGER_CONFIG_INCLUDE_VPI_PCAPDUMP=0
GLOBAL_CFLAGS += -DAIM_CONFIG_INCLUDE_MODULES_INIT=1
GLOBAL_CFLAGS += -DAIM_CONFIG_INCLUDE_MAIN=1
GLOBAL_CFLAGS += -DAIM_CONFIG_INCLUDE_DAEMONIZE=1
GLOBAL_CFLAGS += -DAIM_LOG_OPTIONS_DEFAULT=AIM_LOG_OPTION_BIT_ENABLE
GLOBAL_CFLAGS += -DIVS_CONFIG_INCLUDE_NETWORK_CLI=1
GLOBAL_CFLAGS += -DIVS_CONFIG_INCLUDE_CONSOLE_CLI=1
GLOBAL_CFLAGS += -DIVS_CONFIG_CONSOLE_PROMPT_DEFAULT="\"ofad\""
GLOBAL_CFLAGS += -DIVS_CONFIG_INCLUDE_WATCHDOG=1
GLOBAL_CFLAGS += -DIVS_CONFIG_WATCHDOG_SECONDS=16
GLOBAL_CFLAGS += -DIVS_CONFIG_INCLUDE_INTERFACE_VETH_DEFAULT=0
GLOBAL_CFLAGS += -DIVS_CONFIG_PORT_MAX_PORTS_DEFAULT=128
GLOBAL_CFLAGS += -DIVS_CONFIG_FWD_MAX_FLOWS_DEFAULT=36866
GLOBAL_CFLAGS += -DIVS_CONFIG_CORE_EXPIRE_FLOWS_DEFAULT=0
GLOBAL_CFLAGS += -DOS_CONFIG_INCLUDE_POSIX=1
GLOBAL_CFLAGS += -DBRCM_CONFIG_INCLUDE_TESTS=1
GLOBAL_CFLAGS += -DBRCM_CONFIG_INCLUDE_NETWORK_DIAG_SHELL=0
GLOBAL_CFLAGS += -DBRCM_CONFIG_TARGET_LINUX_USER=1
GLOBAL_CFLAGS += -DBRCM_CONFIG_RATE_LIMIT_DEFAULT=0
GLOBAL_CFLAGS += -DBRCM_CONFIG_INCLUDE_RPC_CLIENT=0
GLOBAL_CFLAGS += -DBRCM_CONFIG_INCLUDE_RPC_SERVER=0
GLOBAL_CFLAGS += -DBRCM_CONFIG_INCLUDE_PLATFORM_QUANTA_LB9=1
GLOBAL_CFLAGS += -DBRCM_CONFIG_INCLUDE_PLATFORM_QUANTA_LB9A=1
GLOBAL_CFLAGS += -DBRCM_CONFIG_INCLUDE_DIAG_SHELL=0
GLOBAL_CFLAGS += -DAIM_CONFIG_INCLUDE_PVS_SYSLOG=1
GLOBAL_CFLAGS += -DAIM_CONFIG_PVS_SYSLOG_IDENT_DEFAULT="\"ofad\""
GLOBAL_CFLAGS += -DIVS_CONFIG_INCLUDE_CXN_LOG=1
GLOBAL_CFLAGS += -DIVS_CONFIG_CXN_LOG_SIZE=100
GLOBAL_CFLAGS += -DCINT_CONFIG_INCLUDE_STDLIB=1
GLOBAL_CFLAGS += -DBRCMDRIVER_CONFIG_INCLUDE_PORT_TYPE_LAG=1

# @fixme Should this be added conditionally?
#GLOBAL_CFLAGS += -DOF_OBJECT_TRACKING
GLOBAL_CFLAGS += -g

ifdef LRI_DEBUG_LEVEL
GLOBAL_CFLAGS += -DLRI_DEBUG_LEVEL=${LRI_DEBUG_LEVEL}
endif

ifdef OF_CXN_DUMP_ALL_OBJECTS
GLOBAL_CFLAGS += -DOF_CXN_DUMP_ALL_OBJECTS
endif

GLOBAL_LINK_LIBS += -ledit -lncurses -rdynamic 

.PHONY: deb
deb:
	$(MAKE) -C deb
