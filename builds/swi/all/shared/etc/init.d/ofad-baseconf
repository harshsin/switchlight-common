#!/usr/bin/python

### BEGIN INIT INFO
# Provides:        ofad-baseconf
# Required-Start:  initdev
# Required-Stop:
# Default-Start:   S
# Default-Stop:
# Short-Description: Set up ofad.conf
### END INIT INFO

import hashlib, json, os, re, subprocess, sys

from switchlight.platform.base import *
from switchlight.platform.current import SwitchLightPlatform

platform=SwitchLightPlatform()

sys.stderr.write("Setting up base ofad configuration...")
sys.stderr.flush()

conf = {}

conf["of_mfr_desc"] = "Big Switch Networks"
conf["of_hw_desc"] = ""
conf["of_serial_num"] = ""


conf["of_mfr_desc"] = platform.manufacturer()
conf["of_hw_desc"] = platform.hw_description()
conf["of_serial_num"] = platform.sysinfo.SERIAL_NUMBER

conf["of_mac_addr_base"] = "00:00:00:00:00:00"
conf["of_datapath_id"] = "0x0000000000000000"

try:
    x = subprocess.check_output(["/sbin/ip", "link", "show", "ma1"])
    m = re.search("link/ether ([0-9a-f:]*)", x)
    if m:
        ma1mac = m.group(1)
        h = hashlib.sha1()
        h.update(ma1mac)
        ma1hash = h.hexdigest()
        macbase = "5c:16:c7:1%s:%s%s:%s%s" % tuple(ma1hash[:5])
        conf["of_mac_addr_base"] = macbase
        conf["of_datapath_id"] = "0x0000" + macbase.replace(":", "")
except (OSError, subprocess.CalledProcessError):
    pass

conf["of_sw_desc"] = ""
try:
    conf["of_sw_desc"] = file("/etc/sl_version").read().strip()
except IOError:
    pass

conf["controllers"] = []
conf["failover_mode"] = "serial"
conf["keepalive_period_ms"] = 10000
conf["of_dp_desc"] = ""
conf["table_miss_action"] = "drop"
conf["full_match_table"] = "all"

conf["version"] = 1

conf["physical_base_name"] = basenames.PHY
conf["lag_base_name"] = basenames.LAG
conf["port_list"] = dict([("%s%d" % (basenames.PHY, i+1), {}) \
                          for i in range(platform.platinfo.PORT_COUNT)])

json.dump(conf, file("/etc/ofad.conf", "w"), indent=4, sort_keys=True)

if os.path.exists("/usr/bin/ofad"):
    os.unlink("/usr/bin/ofad")
if os.path.exists("/lib/modules/linux-kernel-bde.ko"):
    os.unlink("/lib/modules/linux-kernel-bde.ko")
if os.path.exists("/lib/modules/linux-user-bde.ko"):
    os.unlink("/lib/modules/linux-user-bde.ko")

try:
    import ofadsymlinks
except Exception:
    os.symlink("ofad-6.2", "/usr/bin/ofad")
    os.symlink("linux-kernel-bde-6.2.ko", "/lib/modules/linux-kernel-bde.ko")
    os.symlink("linux-user-bde-6.2.ko", "/lib/modules/linux-user-bde.ko")

platform.sys_init();

sys.stderr.write("done.\n")
